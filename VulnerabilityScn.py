import requests
from bs4 import BeautifulSoup
import json
import sqlite3
import tkinter as tk
from tkinter import scrolledtext

class VulnerabilityScanner:
    def __init__(self, target_url):
        self.target_url = target_url
        self.payloads = self.load_payloads()

    def load_payloads(self):
        with open("payloads.json") as file:
            payloads_data = json.load(file)
        return payloads_data

    def check_vulnerability(self, vulnerability_type):
        if vulnerability_type not in self.payloads:
            print(f"Unknown vulnerability type: {vulnerability_type}")
            return

        print(f"Checking for {vulnerability_type} vulnerability...")
        for payload in self.payloads[vulnerability_type]:
            target_url = f"{self.target_url}/{payload}"
            response = requests.get(target_url)
            soup = BeautifulSoup(response.text, 'html.parser')

            if payload in soup:
                print(f"[+] {vulnerability_type} Vulnerability Found: {target_url}")
            else:
                print(f"[-] Not Vulnerable to {vulnerability_type}: {target_url}")

    def check_xss_vulnerability(self):
        self.check_vulnerability("xss")

    def check_sql_injection_vulnerability(self):
        self.check_vulnerability("sql_injection")

    def check_command_injection_vulnerability(self):
        self.check_vulnerability("command_injection")

if __name__ == "__main__":
    target_url = input("Enter the website URL: ")
    scanner = VulnerabilityScanner(target_url)

    scanner.check_xss_vulnerability()
    scanner.check_sql_injection_vulnerability()
    scanner.check_command_injection_vulnerability()
